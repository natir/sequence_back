var searchIndex = JSON.parse('{\
"sequence_back":{"doc":"Rewrite of back_to_sequence to try improve performance","t":"GAAAAAADLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENNNGLLLLLLLLLLLLLLLLNNELLLLLLLLLLLLLLLLLLLLLLFGILLLLF","n":["Kmer","cli","error","format","io","kmer_counter","tokenizer","Command","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","input_kmers","input_sequences","into","kmer_size","max_threshold","min_threshold","output_kmers","output_sequences","query_reverse","quiet","record_buffer","stranded","timestamp","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","verbosity","Error","Log","NotFastaOrFastq","QueryReverseWithoutStranded","Result","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","init","into","source","to_string","try_from","try_into","type_id","Fasta","Fastq","ReadsFormat","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","detect","drop","eq","equivalent","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","filter_reads","KmerCounter","KmerCounterTrait","from_fasta_stream","from_fastq_stream","from_stream","to_csv","get_tokenizer"],"q":[[0,"sequence_back"],[7,"sequence_back::cli"],[42,"sequence_back::error"],[63,"sequence_back::format"],[88,"sequence_back::io"],[89,"sequence_back::kmer_counter"],[95,"sequence_back::tokenizer"]],"d":["Alias for define Kmer","Command Line Interface declaration of project sequence_back","Error struct of project sequence_back","Detect format of file","Specialize an HashSet to get intresting kmer.","Specialize an HashSet to get intresting kmer.","Define iterator over kmer of sequences","Rewrite of back_to_sequence to try improve performance","","","","","","","","","","","Returns the argument unchanged.","","","","","Get kmers reader","Get sequences reader","Calls <code>U::from(self)</code>.","Get kmer size","Get maximal threshold","Get minimal threshold","Get kmers writer","Get sequences writer","Get query_reverse","Get quiet","Get record buffer length","Get stranded","Get timestamp granularity","","","","","","Get verbosity level","Enum to manage error","Error in logging system configuration","Input stream isnâ€™t fasta or fastq format","Set option query-reverse useless without stranded option","Alias of result","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Fasta format","Fastq format","List available reads format","","","","","","","","Detect format of file by read the first byte","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","Filter reads by kmer","Alias for AHashSet","Trait to add functionalty to AHashSet","Build an KmerCounter from a $doc stream","Build an KmerCounter from a $doc stream","Build an KmerCounter from stream","Write","Create the good tokenizer"],"i":[0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,22,22,22,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,26,26,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,0,0,33,33,33,33,0],"f":[0,0,0,0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[[3,4],5],[[]],[6,[[8,[3,7]]]],[6,[[8,[3,7]]]],[[],[[10,[9]]]],[[],2],[3,[[14,[[13,[[12,[11]]]]]]]],[3,[[14,[[13,[[12,[11]]]]]]]],[[]],[3,15],[3,16],[3,16],[3,[[14,[[13,[[18,[17]]]]]]]],[3,[[14,[[13,[[18,[17]]]]]]]],[3,19],[3,19],[3,15],[3,19],[3,20],[[],8],[[],8],[[],21],[[3,6],[[8,[7]]]],[[3,6],[[8,[7]]]],[3,2],0,0,0,0,0,[[]],[[]],[2],[2],[2],[[22,4],5],[[22,4],5],[23,22],[[]],[[],2],[[]],[22,[[10,[24]]]],[[],25],[[],8],[[],8],[[],21],0,0,0,[[]],[[]],[26,26],[[]],[[],26],[2],[2],[11,[[14,[26]]]],[2],[[26,26],19],[[],19],[[26,4],5],[[26,4],5],[[]],[[26,27]],[[],2],[[]],[[]],[[],25],[[],8],[[],8],[[],21],[[28,17,29,15,16,16,19,19,15],14],0,0,[[28,15,19,19,15],[[14,[29]]]],[[28,15,19,19,15],[[14,[29]]]],[[28,15,19,19,15],[[14,[29]]]],[[29,17],14],[[[31,[30]],15,19,19],[[14,[[13,[32]]]]]]],"c":[],"p":[[3,"Command"],[15,"usize"],[3,"Command"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[8,"Read"],[3,"BufReader"],[3,"Box"],[6,"Result"],[15,"u64"],[15,"f64"],[8,"Write"],[3,"BufWriter"],[15,"bool"],[4,"Timestamp"],[3,"TypeId"],[4,"Error"],[3,"SetLoggerError"],[8,"Error"],[3,"String"],[4,"ReadsFormat"],[8,"Hasher"],[8,"BufRead"],[6,"KmerCounter"],[15,"u8"],[15,"slice"],[8,"Iterator"],[8,"KmerCounterTrait"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
